LIBRARY IEEE;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.ALL;
LIBRARY lpm;
USE lpm.lpm_components.all;


-------------------------------------------------------
ENTITY pixel_generator IS
	PORT(    clk         :   IN   STD_LOGIC;
	         video_on    :   IN   STD_LOGIC;
				pixel_x     :   IN   STD_LOGIC_VECTOR(9  DOWNTO 0);
				pixel_y     :   IN   STD_LOGIC_VECTOR(8  DOWNTO 0);
				r           :   OUT  STD_LOGIC;
				g           :   OUT  STD_LOGIC;
				b           :   OUT  STD_LOGIC
	);		
END ENTITY;
--------------------------------------------------------

ARCHITECTURE rtl OF pixel_generator IS
   
	SIGNAL red_s         :   std_LOGIC_VECTOR(9 downto 0);
	SIGNAL green_s       :   std_LOGIC_VECTOR(9 downto 0);
	SIGNAL blue_s        :   std_LOGIC_VECTOR(9 downto 0);
	
BEGIN
 


Pacho_Red: lpm_rom
    GENERIC MAP(
            lpm_widthad    => 9,
            lpm_outdata => "UNREGISTERED",
            lpm_address_control => "REGISTERED",
            lpm_file        => "red_image.mif",
            lpm_width    => 10)
    PORT MAP (
            inclock   =>not clk,
            address   =>pixel_y,
            q         =>red_s );
				

				
Pacho_Blue: lpm_rom
    GENERIC MAP(
            lpm_widthad    => 9,
            lpm_outdata => "UNREGISTERED",
            lpm_address_control => "REGISTERED",
            lpm_file        => "blue_image.mif",
            lpm_width    => 10)
    PORT MAP (
            inclock   =>not clk,
            address   =>pixel_y ,
            q         =>green_s );
				
				
Pacho_Green: lpm_rom
    GENERIC MAP(
            lpm_widthad    => 9,
            lpm_outdata => "UNREGISTERED",
            lpm_address_control => "REGISTERED",
            lpm_file        => "green_image.mif",
            lpm_width    => 10)
    PORT MAP (
            inclock   =>not clk,
            address   =>pixel_y,
            q         =>blue_s );
			
		
	
r <=   red_s(to_integer(unsigned(pixel_x)));	
	
g <=   green_s(to_integer(unsigned(pixel_x)));	
	
b <=   blue_s(to_integer(unsigned(pixel_x)));	
	
	
END ARCHITECTURE;