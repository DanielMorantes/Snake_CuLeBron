LIBRARY IEEE;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.ALL;
-------------------------------------------------------
ENTITY culebra_debouncer IS
   PORT(    clk         :   IN   STD_LOGIC;
	         rst         :   IN   STD_LOGIC;
				upin        :   IN   STD_LOGIC;
				downin      :   IN   STD_LOGIC;
				leftin      :   IN   STD_LOGIC;
				rightin     :   IN   STD_LOGIC;
				upo         :   OUT   STD_LOGIC;
				downo       :   OUT   STD_LOGIC;
				lefto       :   OUT   STD_LOGIC;
				righto      :   OUT   STD_LOGIC
	);	

END ENTITY;

ARCHITECTURE rtl OF culebra_debouncer IS

  SIGNAL up_sig    : STD_LOGIC;
  SIGNAL down_sig  : STD_LOGIC;
  SIGNAL right_sig : STD_LOGIC;
  SIGNAL left_sig  : STD_LOGIC;
 

BEGIN

   --WRITE PROCESS
  write_process  :  PROCESS(clk, rst, upin, leftin, rightin, downin)
  BEGIN
     IF(rising_edge(clk ))   THEN
	     IF  (rst = '1')  THEN
		     left_sig  <= '0';
			  up_sig    <= '0';
			  down_sig  <= '0';
			  right_sig <= '1';
		 END IF;
			  
		  IF  (leftin = '1')  THEN
		     left_sig  <= '1';
			  up_sig    <= '0';
			  down_sig  <= '0';
			  right_sig <= '0';
		  
	    END IF;
		 IF  (upin = '1')  THEN
		     left_sig  <= '0';
			  up_sig    <= '1';
			  down_sig  <= '0';
			  right_sig <= '0';
		  
	    END IF;
		 IF  (rightin = '1')  THEN
		     left_sig  <= '0';
			  up_sig    <= '0';
			  down_sig  <= '0';
			  right_sig <= '1';
		  
	    END IF;
		 IF  (downin = '1')  THEN
		     left_sig  <= '0';
			  up_sig    <= '0';
			  down_sig  <= '1';
			  right_sig <= '0';
		  
	    END IF;
     END IF;
	  upo    <= up_sig;
	  downo  <= down_sig;
	  lefto  <= left_sig;
	  righto <= right_sig;
	END PROCESS;   
	
	


END ARCHITECTURE;